return bool
set table(table pointer, constant simple command, constant integer input def, constant integer output def)
{
	table's command is simple command's command
	table's argument is {merge}(simple command)
	if {set redirection}(table address, simple command's redirection, input def, output def) is fail
		return false
	return true
}

return string
merge(constant simple command)
{
	command length is length of simple command's length
	argument length is length of simple command's length
	size is command length + argument length + 2
	malloc size to result

	if result is null
		exit fail
	copy simple command's command to result
	cat ' ' to result
	cat simple command's argument to result
	return result
}

return bool
set redirection(table pointer, redirection list, consttant integer input def, constant integer output def)
{
	table's input = {set input}(redirection, stdin)
	if input is negative
		return false
	table's output = {set output}(redirection, stdout)
	return true
}

return integer
set input(constant redirection list, constant integer def)
{
	input

	input is def
	while list is not null
	{
		if list's symbol is <
		{
			input is result of open list'sfile for read mode
			if input is negative
			{
				print error message
				return negative
			}
		}
		if list's symbol is <<
		{
			input is result of run {heredoc}(list's file)
			if input is negative
				exit program -> 파일 디스크립트가 없을 정도면...
		}
		list is list's next
	}
	return input
}

return void
set output(constant redirection list, constant integer def)
{
	output

	output is def
	while list is not null
	{
		if list's symbol is >
		{
			output is result of open list's file for write mode
			if output is negative
				exit program
		}
		if list's symbol is >>
		{
			output is result of open list's file for write and appen mode
			if output is negative
				exit program
		}
	}
}
