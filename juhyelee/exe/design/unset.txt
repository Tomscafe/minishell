return integer
unset(argument, env list)
{
	envs
	index
	p list

	argument + length of "unset "
	if argument's zero is null
		return success
	envs is result of split argument by ' '
	if envs is null
		exit fail
	index is zero
	while envs's index
	{
		p list is env list
		while p list is not null
		{
			if p list is envs's
				{remove env}(env list, p list)
			p list is p list's next
		}
		index increase one
	}
	return success
}

return void
remove env(env list, to del)
{
	to del prev

	if env list same to del
		env list is to del
	else
	{
		to del prev is env list
		while to del prev's next is to del
			to del prev is to del prev's next
		to del prev's next is to del's next
	}
	free to del's variable
	free to del's value
	free to del
}
